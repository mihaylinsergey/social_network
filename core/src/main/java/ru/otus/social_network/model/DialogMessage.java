/*
 * OTUS Highload Architect
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.otus.social_network.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * DialogMessage
 */
@JsonPropertyOrder({
  DialogMessage.JSON_PROPERTY_FROM,
  DialogMessage.JSON_PROPERTY_TO,
  DialogMessage.JSON_PROPERTY_TEXT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-29T19:14:42.241620900+03:00[Europe/Moscow]", comments = "Generator version: 7.11.0")
public class DialogMessage {
  public static final String JSON_PROPERTY_FROM = "from";
  @jakarta.annotation.Nonnull
  private String from;

  public static final String JSON_PROPERTY_TO = "to";
  @jakarta.annotation.Nonnull
  private String to;

  public static final String JSON_PROPERTY_TEXT = "text";
  @jakarta.annotation.Nonnull
  private String text;

  public DialogMessage() {
  }

  public DialogMessage from(@jakarta.annotation.Nonnull String from) {
    
    this.from = from;
    return this;
  }

  /**
   * Идентификатор пользователя
   * @return from
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFrom() {
    return from;
  }


  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFrom(@jakarta.annotation.Nonnull String from) {
    this.from = from;
  }

  public DialogMessage to(@jakarta.annotation.Nonnull String to) {
    
    this.to = to;
    return this;
  }

  /**
   * Идентификатор пользователя
   * @return to
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTo() {
    return to;
  }


  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTo(@jakarta.annotation.Nonnull String to) {
    this.to = to;
  }

  public DialogMessage text(@jakarta.annotation.Nonnull String text) {
    
    this.text = text;
    return this;
  }

  /**
   * Текст сообщения
   * @return text
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setText(@jakarta.annotation.Nonnull String text) {
    this.text = text;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DialogMessage dialogMessage = (DialogMessage) o;
    return Objects.equals(this.from, dialogMessage.from) &&
        Objects.equals(this.to, dialogMessage.to) &&
        Objects.equals(this.text, dialogMessage.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, to, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DialogMessage {\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

